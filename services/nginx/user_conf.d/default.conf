upstream exploit_server_app {
    server web:5000;
}

# set rate limiting
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
# ignore invalid headers
ignore_invalid_headers off;

server {
    listen 80 default_server reuseport;
    listen [::]:80 default_server reuseport;

    ignore_invalid_headers off;

    # Pass this particular URL off to the certbot server so it can properly
    # respond to the Let's Encrypt ACME challenges for the HTTPS certificates.
    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        proxy_pass http://localhost:81;
    }

    location / {
        limit_req zone=one burst=5;
        proxy_pass http://exploit_server_app;
        proxy_set_header Host do6.us;
        proxy_redirect off;
    }
}

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    ignore_invalid_headers off;

    # Domain names this server should respond to.
    server_name do6.us www.do6.us;

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/do6.us/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/do6.us/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/do6.us/chain.pem;

    # Load the Diffie-Hellman parameter.
    # ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    # return 200 'Let\'s Encrypt certificate successfully installed!';
    # add_header Content-Type text/plain;

    location / {
        limit_req zone=one burst=5;
        proxy_pass http://exploit_server_app;
        proxy_set_header Host do6.us;
        proxy_redirect off;
    }
}

